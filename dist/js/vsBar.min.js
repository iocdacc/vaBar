(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! exports provided: vsBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vsBar\", function() { return vsBar; });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar vsBar =\n/*#__PURE__*/\nfunction () {\n  function vsBar(config) {\n    _classCallCheck(this, vsBar);\n\n    this.config = {\n      cvsPadding: 0,\n      //canvas内边距\n      cvslineWidth: 10,\n      //线条宽度\n      millisecond: 2000,\n      //动画持续时间(毫秒)\n      cvsBarPercent: 1,\n      //结束位置(0~1)\n      cvsDom: null,\n      frameBarPercent: 0,\n      color: '#000',\n      barBeforeEnd: 0,\n      //上一次结束位置\n      barNow: 0 //当前位置\n\n    };\n    this.config = Object.assign(this.config, config);\n\n    if (!this.config.cvsDom) {\n      throw new Error('缺少canvas画板');\n    }\n\n    if (typeof this.config.cvsDom === \"string\") {\n      var cvsChild = _toConsumableArray(document.getElementsByClassName(this.config.cvsDom));\n\n      if (cvsChild.length == 0) {\n        throw new Error('缺少canvas画板');\n      }\n\n      cvsChild.forEach(function (v) {\n        new vsBar(v);\n      });\n      return false;\n    }\n\n    if (!HTMLCanvasElement.prototype.isPrototypeOf(this.config.cvsDom)) {\n      throw new Error('缺少canvas画板');\n    }\n\n    this.config.cvsDom.width = this.config.cvsDom.clientWidth;\n    this.config.cvsDom.height = this.config.cvsDom.clientHeight;\n    this.step();\n  } //过渡\n\n\n  _createClass(vsBar, [{\n    key: \"step\",\n    value: function step() {\n      var _this = this;\n\n      var start = null;\n\n      var step = function step(now) {\n        if (!start) {\n          start = now;\n        }\n\n        now = now - start;\n        _this.barNow = now / _this.config.millisecond * (_this.config.cvsBarPercent - _this.config.barBeforeEnd) + _this.config.barBeforeEnd;\n\n        if (_this.config.cvsBarPercent > _this.config.barBeforeEnd && _this.barNow > _this.config.cvsBarPercent) {\n          _this.barNow = _this.config.cvsBarPercent;\n        } else if (_this.config.cvsBarPercent < _this.config.barBeforeEnd && _this.barNow < _this.config.cvsBarPercent) {\n          _this.barNow = _this.config.cvsBarPercent;\n        }\n\n        _this.barCircle();\n\n        if (now / _this.config.millisecond > 1) {\n          cancelAnimationFrame(_this.stepID);\n          return false;\n        }\n\n        _this.stepID = requestAnimationFrame(step);\n      };\n\n      this.stepID = requestAnimationFrame(step);\n    } //重置\n\n  }, {\n    key: \"reset\",\n    value: function reset(config) {\n      cancelAnimationFrame(this.stepID);\n      this.config.barBeforeEnd = this.config.cvsBarPercent;\n      this.config = Object.assign(this.config, config);\n      this.step();\n    } //画板\n\n  }, {\n    key: \"barCircle\",\n    value: function barCircle() {\n      var r = (this.config.cvsDom.clientWidth - this.config.cvslineWidth - this.config.cvsPadding * 2) / 2;\n      var ctx = this.config.cvsDom.getContext('2d');\n      ctx.clearRect(0, 0, this.config.cvsDom.clientWidth, this.config.cvsDom.clientHeight); //清除画布已有内容\n\n      ctx.lineWidth = this.config.cvslineWidth;\n      ctx.beginPath();\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = this.config.color;\n      ctx.arc(this.config.cvsDom.clientWidth / 2, this.config.cvsDom.clientHeight / 2, r, -90 * Math.PI / 180, (360 * this.barNow - 90) * Math.PI / 180); //绘制一个弧线\n\n      ctx.stroke();\n    }\n  }]);\n\n  return vsBar;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ })

/******/ });
});